// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerformanceTrackerAPI.Data;

#nullable disable

namespace PerformanceTrackerAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220407144225_UpdatedDataModel6")]
    partial class UpdatedDataModel6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivityName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.ParameterAllowedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllowedValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParameterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AllowedType");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.ParameterAllowedValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllowedValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParameterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AllowedValue");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.ParameterLogging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LogEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParameterAllowedTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParameterAllowedValueId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParameterAllowedTypeId");

                    b.HasIndex("ParameterAllowedValueId");

                    b.HasIndex("SubActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("ParameterLog");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.SubActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubActivityName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("SubActivity");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.SubActivityParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParameterName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubActivityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubActivityId");

                    b.ToTable("SubActivityParameter");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.ParameterLogging", b =>
                {
                    b.HasOne("PerformanceTrackerAPI.Entities.ParameterAllowedType", "ParameterAllowedType")
                        .WithMany()
                        .HasForeignKey("ParameterAllowedTypeId");

                    b.HasOne("PerformanceTrackerAPI.Entities.ParameterAllowedValue", "ParameterAllowedValue")
                        .WithMany()
                        .HasForeignKey("ParameterAllowedValueId");

                    b.HasOne("PerformanceTrackerAPI.Entities.SubActivity", "SubActivity")
                        .WithMany()
                        .HasForeignKey("SubActivityId");

                    b.HasOne("PerformanceTrackerAPI.Entities.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ParameterAllowedType");

                    b.Navigation("ParameterAllowedValue");

                    b.Navigation("SubActivity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.SubActivity", b =>
                {
                    b.HasOne("PerformanceTrackerAPI.Entities.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("PerformanceTrackerAPI.Entities.SubActivityParameter", b =>
                {
                    b.HasOne("PerformanceTrackerAPI.Entities.SubActivity", "SubActivity")
                        .WithMany()
                        .HasForeignKey("SubActivityId");

                    b.Navigation("SubActivity");
                });
#pragma warning restore 612, 618
        }
    }
}
